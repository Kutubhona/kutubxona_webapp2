// =================== FIREBASE INIT ===================
const firebaseConfig = {
  apiKey: "AIzaSyDuk-PhyFg5j7JkVnvfcYfBKGMoNZtT02s",
  authDomain: "kutubxona-79dd3.firebaseapp.com",
  projectId: "kutubxona-79dd3",
  storageBucket: "kutubxona-79dd3.firebasestorage.app",
  messagingSenderId: "593289819612",
  appId: "1:593289819612:web:89b9a8dd933f945eb78b19",
  measurementId: "G-Z0Z4FWPWP8"
};
firebase.initializeApp(firebaseConfig);

// =================== ELEMENTS ===================
const html = document.documentElement;
const booksContainer = document.getElementById('booksContainer');
const searchInput = document.getElementById('searchInput');
const categoryButtons = document.querySelectorAll('.category-btn');
const toggleThemeBtn = document.getElementById('toggleTheme');
const toggleLangBtn = document.getElementById('toggleLang');
const uploadSection = document.getElementById('uploadSection');
const adminToggleBtn = document.getElementById('adminToggle');
const uploadForm = document.getElementById('uploadForm');
const progressWrap = document.getElementById('progressWrap');
const progressBar = document.getElementById('progressBar');

// Modal elements
const pdfModal = document.getElementById('pdfModal');
const openPDFBtn = document.getElementById('openPDFBtn');
const downloadPDFBtn = document.getElementById('downloadPDFBtn');
const downloadNotice = document.getElementById('downloadNotice');
const openDownloaded = document.getElementById('openDownloaded');
const modalClose = document.querySelector('.modal-close');

// Category Overlay elements
const overlay = document.getElementById('categoryOverlay');
const overlayClose = document.getElementById('overlayClose');
const overlayBooks = document.getElementById('overlayBooks');
const overlayTitle = document.getElementById('overlayTitle');
const overlayContent = document.querySelector('.overlay-content');

// Splash elements
const splash = document.getElementById('splash');

// State
let activeCategory = "";
let allBooks = [];
let isAdmin = false;
let currentPDF = "";
let isKirill = true; // language state

// =================== THEME ===================
function setTheme(theme) {
  html.setAttribute('data-theme', theme);
  localStorage.setItem('theme', theme);
  const themeText = {
    'light': '<i class="fas fa-moon"></i> Қоронғу режим',
    'dark': '<i class="fas fa-sun"></i> Ёруғ режим'
  };
  toggleThemeBtn.innerHTML = themeText[theme];
}

function loadTheme() {
  const saved = localStorage.getItem('theme') || (matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  setTheme(saved);
}

toggleThemeBtn.addEventListener('click', () => {
  const next = html.getAttribute('data-theme') === 'dark' ? 'light' : 'dark';
  document.body.animate([{ filter:'brightness(1.0)' },{ filter:'brightness(1.06)' },{ filter:'brightness(1.0)'}], { duration: 320 });
  setTheme(next);
});

// =================== LANGUAGE ===================
const TRANSLATIONS = {
    'Кутубхонага': 'Kutubxonaga',
    'Хуш келибсиз!': 'Xush kelibsiz!',
    'Премиум Кутубхона': 'Premium Kutubxona',
    'Сизга китоб тавсия қиламиз!': 'Sizga kitob tavsiya qilamiz!',
    'Қайси китобни қидиряпсиз?': 'Qaysi kitobni qidiryapsiz?',
    'Қоронғу режим': 'Qorong‘u rejim',
    'Ёруғ режим': 'Yorug‘ rejim',
    'Тил': 'Til',
    'Қуръони Карим': 'Qur’oni Karim',
    'Тафсир китоблари': 'Tafsir kitoblari',
    'Ҳадис китоблари': 'Hadis kitoblari',
    'Фиқҳий китоблари': 'Fiqhiy kitoblari',
    'Ақида китоблари': 'Aqida kitoblari',
    'Тарих китоблари': 'Tarix kitoblari',
    'Сийрат китоблари': 'Siyrat kitoblari',
    'Саҳобалар ҳаёти': 'Sahobalar hayoti',
    'Ахлоқ ва тарбия': 'Axloq va tarbiya',
    'Дуо ва зикрлар': 'Duo va zikrlar',
    'Ал-Ваъй журнали': 'Al-Va’y jurnali',
    'Ҳизб китоблари': 'Hizb kitoblari',
    'Admin Rejim': 'Admin Rejim',
    'Янги китоб қўшиш': 'Yangi kitob qo‘shish',
    'Китоб номи': 'Kitob nomi',
    'Тавсиф': 'Tavsif',
    'Категория танланг': 'Kategoriya tanlang',
    'Китоб қўшиш': 'Kitob qo‘shish',
    'PDF билан нима қилмоқчисиз?': 'PDF bilan nima qilmoqchisiz?',
    'Браузерда очиш': 'Brauzerda ochish',
    'Юклаб олиш': 'Yuklab olish',
    'PDF қурилмангизга муваффақиятли юкланди!': 'PDF qurilmangizga muvaffaqiyatli yuklandi!',
    'Юкланган PDF\'ни очиш': 'Yuklangan PDF\'ni ochish',
    'Ҳозирча бу ерда китоб йўқ...': 'Hozircha bu yerda kitob yo‘q...',
    'PDF': 'PDF',
    'Ўчириш': 'O‘chirish',
    'Китоб қўшиш ва ўчириш учун паролни киритинг:': 'Kitob qo‘shish va o‘chirish uchun parolni kiriting:',
    'Админ режимига муваффақиятли кирдингиз!': 'Admin rejimiga muvaffaqiyatli kirdingiz!',
    'Нотўғри парол!': 'Noto‘g‘ri parol!',
    'PDF файл танланмаган!': 'PDF fayl tanlanmagan!',
    'Юклашда хатолик: ': 'Yuklashda xatolik: ',
    'Китоб муваффақиятли қўшилди!': 'Kitob muvaffaqiyatli qo‘shildi!',
    'Хатолик: ': 'Xatolik: ',
    'Сизда ўчириш ҳуқуқи йўқ!': 'Sizda o‘chirish huquqi yo‘q!',
    'Ҳақиқатан ҳам бу китобни ўчирмоқчимисиз?': 'Haqiqatan ham bu kitobni o‘chirmoqchimisiz?',
    'Китоб муваффақиятли ўчирилди!': 'Kitob muvaffaqiyatli o‘chirildi!',
    'Ўчиришда хатолик: ': 'O‘chirishda xatolik: '
};

function switchLanguage() {
    isKirill = !isKirill;
    
    // Matnli elementlarni yangilash
    document.querySelectorAll('[data-original-text]').forEach(el => {
        const key = el.getAttribute('data-original-text');
        el.textContent = isKirill ? key : (TRANSLATIONS[key] || key);
    });

    // Input placeholderlarini yangilash
    document.querySelectorAll('input[data-original-placeholder]').forEach(input => {
        const placeholderKey = input.getAttribute('data-original-placeholder');
        input.placeholder = isKirill ? placeholderKey : (TRANSLATIONS[placeholderKey] || placeholderKey);
    });

    // Select optionlarini yangilash
    document.querySelectorAll('select option').forEach(option => {
        const originalOptionText = option.getAttribute('data-original-text') || option.textContent.trim();
        if (!option.hasAttribute('data-original-text')) {
            option.setAttribute('data-original-text', originalOptionText);
        }
        const optionKey = option.getAttribute('data-original-text');
        option.textContent = isKirill ? optionKey : (TRANSLATIONS[optionKey] || optionKey);
    });
    
    // Maxsus tugmalarni yangilash (iconlari bor)
    const updateButtonText = (btn, textKey) => {
        const icon = btn.querySelector('i');
        const translatedText = isKirill ? textKey : TRANSLATIONS[textKey] || textKey;
        btn.innerHTML = `${icon ? icon.outerHTML : ''} ${translatedText}`;
    };

    updateButtonText(toggleLangBtn, 'Тил');
    updateButtonText(toggleThemeBtn, 'Қоронғу режим');
    updateButtonText(adminToggleBtn, 'Admin Rejim');
    const uploadBtn = document.querySelector('#uploadForm .btn-primary');
    if (uploadBtn) updateButtonText(uploadBtn, 'Китоб қўшиш');
    
    // Kategoriyalar matnini yangilash (iconlari bilan)
    document.querySelectorAll('.category-btn').forEach(btn => {
        const icon = btn.querySelector('i');
        const originalText = btn.getAttribute('data-original-text');
        const iconHTML = icon ? icon.outerHTML : '';
        btn.innerHTML = `${iconHTML} ${isKirill ? originalText : TRANSLATIONS[originalText] || originalText}`;
    });

    // overlay matnini yangilash
    if (activeCategory) {
        overlayTitle.textContent = isKirill ? activeCategory : (TRANSLATIONS[activeCategory] || activeCategory);
    }
    
    filterBooks();
}

toggleLangBtn.addEventListener('click', switchLanguage);

// =================== SPLASH SEQUENCE ===================
function runSplash() {
  setTimeout(() => {
    splash.classList.add('splash-fade-out');
    setTimeout(() => {
      if (splash && splash.parentNode) splash.remove();
      revealAll();
    }, 800);
  }, 2800);
}

// =================== BOOK CARD TEMPLATE ===================
function bookCardTemplate(book) {
  const title = isKirill ? book.title : TRANSLATIONS[book.title] || book.title;
  const description = isKirill ? book.description : TRANSLATIONS[book.description] || book.description;
  const category = isKirill ? book.category : TRANSLATIONS[book.category] || book.category;
  
  // Card itself will open PDF modal.
  return `
    <article class="card reveal" data-id="${book.id}" data-link="${book.link}" data-category="${book.category}">
      <div class="book-title">${title || 'Номсиз китоб'}</div>
      <div class="book-desc">${description || ''}</div>
      <div class="card-actions">
        ${isAdmin ? `
          <button class="btn btn-danger" data-action="delete" data-id="${book.id}" data-link="${book.link}">
            <i class="fas fa-trash"></i> ${isKirill ? 'Ўчириш' : 'O‘chirish'}
          </button>
        ` : ''}
      </div>
    </article>
  `;
}

function renderBooks(list, container) {
  const noBooksMessage = isKirill ? `Ҳозирча бу ерда китоб йўқ...` : `Hozircha bu yerda kitob yo‘q...`;
  container.innerHTML = list.length 
    ? list.map(bookCardTemplate).join('') 
    : `<p class="no-books-message">${noBooksMessage}</p>`;
  revealAll();
}

// =================== FILTERING ===================
function filterBooks() {
  // Asosiy sahifada kitoblar bo‘lmasligi uchun bu funksiya faqat overlayBooks uchun ishlaydi
  if (activeCategory) {
    const q = (searchInput.value || '').toLowerCase();
    const filtered = allBooks.filter(b => 
      b.category === activeCategory && 
      (!q || (b.title && b.title.toLowerCase().includes(q)) || 
             (b.description && b.description.toLowerCase().includes(q)))
    );
    renderBooks(filtered, overlayBooks);
  } else {
    // Asosiy sahifa bo‘sh bo‘ladi
    booksContainer.innerHTML = '';
  }
}

searchInput.addEventListener('input', () => {
    // Agar overlay ochiq bo'lsa, faqat overlay ichini filtrlash
    if (activeCategory) {
        filterBooks();
    }
});

// =================== CATEGORY OVERLAY (history + overlay background sync) ===================
function openOverlay(category, pushHistory = true) {
    activeCategory = category;
    overlayTitle.textContent = isKirill ? category : (TRANSLATIONS[category] || category);
    categoryButtons.forEach(b =>
      b.classList.toggle('active', b.dataset.category === activeCategory)
    );

    // faqat shu kategoriyadan kitoblarni chiqaramiz
    const filtered = allBooks.filter(b => b.category === activeCategory);
    renderBooks(filtered, overlayBooks);

    // overlay kartochkalar fonini tanlangan kategoriya tugmasiga moslab o'zgartirish
    const btn = document.querySelector(`.category-btn[data-category="${category}"]`);
    if (btn) {
      const computed = getComputedStyle(btn);
      // background could be gradient - copy as is
      const bg = computed.backgroundImage || computed.background;
      // set CSS var to overlay content and to root for usage
      overlayContent.style.setProperty('--active-cat-bg', bg);
      document.documentElement.style.setProperty('--active-cat-bg', bg);
    }

    revealAll();
    overlay.hidden = false;
    setTimeout(() => overlay.classList.add('show'), 10);

    if (pushHistory) {
      // push an entry to history so phone back button can close overlay
      const slug = category.replace(/\s+/g, '-').toLowerCase();
      history.pushState({ overlayOpen: true, category }, "", `#category-${slug}`);
    }
}

function closeOverlay(skipHistory = false) {
    overlay.classList.remove('show');
    setTimeout(() => { overlay.hidden = true; }, 400);
    // remove active class on categories
    categoryButtons.forEach(b => b.classList.remove('active'));
    activeCategory = "";
    booksContainer.innerHTML = ''; // Asosiy sahifani tozalash

    // If we didn't come from popstate, move history back so popstate handler won't be confused
    if (!skipHistory && history.state && history.state.overlayOpen) {
      // go back to previous state (this will trigger popstate)
      history.back();
    }
}

overlayClose.addEventListener('click', () => closeOverlay(false));

// category tugmalarini yangilash
categoryButtons.forEach(btn => {
  btn.addEventListener('click', (e) => {
    const cat = e.currentTarget.dataset.category;
    openOverlay(cat, true);
  });
});

// Listen to popstate to handle hardware back button / browser back
window.addEventListener('popstate', (e) => {
  // if the new state is overlayOpen, open it (useful if user used back/forward)
  if (e.state && e.state.overlayOpen) {
    openOverlay(e.state.category, false);
  } else {
    // no overlayOpen in state => close overlay (skipHistory true so we don't call history.back() again)
    if (!overlay.hidden) closeOverlay(true);
  }
});

// =================== PDF MODAL ===================
function showPDFOptions(pdfURL) {
  currentPDF = pdfURL; 
  downloadNotice.hidden = true;
  pdfModal.hidden = false;
  setTimeout(() => pdfModal.classList.add('show'), 10);
}

openPDFBtn.addEventListener('click', () => { 
  if (currentPDF) window.open(currentPDF, '_blank'); 
});

downloadPDFBtn.addEventListener('click', () => {
  if (!currentPDF) return; 
  const a = document.createElement('a'); 
  a.href = currentPDF; 
  a.download = 'kitob.pdf'; 
  document.body.appendChild(a); 
  a.click(); 
  a.remove();
  openDownloaded.href = currentPDF; 
  downloadNotice.hidden = false;
});

modalClose.addEventListener('click', () => {
  pdfModal.classList.remove('show');
  setTimeout(() => { pdfModal.hidden = true; }, 300);
});

pdfModal.addEventListener('click', (e) => { 
  if (e.target === pdfModal) {
    pdfModal.classList.remove('show');
    setTimeout(() => { pdfModal.hidden = true; }, 300);
  }
});

// =================== Delegate actions on main page cards ===================
// Asosiy sahifada kitoblar bo'lmaydi, shuning uchun bu funksiya o'chirib tashlandi.

// same for overlayBooks (cards inside overlay)
overlayBooks.addEventListener('click', (e) => {
  const delBtn = e.target.closest('[data-action="delete"]');
  if (delBtn) {
    deleteBook(delBtn.dataset.id, delBtn.dataset.link);
    return;
  }
  const card = e.target.closest('.card');
  if (card && card.dataset.link) {
    showPDFOptions(card.dataset.link);
  }
});

// =================== ADMIN ===================
adminToggleBtn.addEventListener('click', () => {
  const password = prompt(isKirill ? "Китоб қўшиш ва ўчириш учун паролни киритинг:" : "Kitob qo‘shish va o‘chirish uchun parolni kiriting:");
  if (password === "ibr2010071717.se") {
    isAdmin = true; 
    uploadSection.hidden = false;
    uploadSection.classList.add('reveal');
    setTimeout(() => uploadSection.classList.add('show'), 10);
    filterBooks();
    alert(isKirill ? "✅ Админ режимига муваффақиятли кирдингиз!" : "✅ Admin rejimiga muvaffaqiyatli kirdingiz!");
  } else {
    alert(isKirill ? "❌ Нотўғри парол!" : "❌ Noto‘g‘ri parol!");
  }
});

// =================== UPLOAD ===================
uploadForm.addEventListener('submit', async (e) => {
  e.preventDefault();
  const title = document.getElementById('bookTitle').value.trim();
  const description = document.getElementById('bookDescription').value.trim();
  const category = document.getElementById('bookCategory').value;
  const file = document.getElementById('bookFile').files[0];
  
  if (!file) { 
    alert(isKirill ? '❌ PDF файл танланмаган!' : '❌ PDF fayl tanlanmagan!'); 
    return; 
  }
  
  try {
    const clean = file.name.toLowerCase().replace(/\s+/g,'_').replace(/[^a-z0-9_\-.]/g,'');
    const unique = `${Date.now()}_${clean}`;
    const storageRef = firebase.storage().ref(`books/${unique}`);
    const uploadTask = storageRef.put(file, { 
      customMetadata: { secret_code: 'ibr2010071717.se' } 
    });
    
    progressWrap.hidden = false;
    progressBar.style.width = '0%';
    progressBar.textContent = '0%';
    
    uploadTask.on('state_changed', 
      (snap) => {
        const p = (snap.bytesTransferred / snap.totalBytes) * 100;
        progressBar.style.width = `${p.toFixed(0)}%`;
        progressBar.textContent = `${p.toFixed(0)}%`;
      }, 
      (err) => {
        console.error('❌ Yuklash xatolik:', err);
        progressWrap.hidden = true;
        alert(isKirill ? '❌ Юклашда хатолик: ' + err.message : '❌ Yuklashda xatolik: ' + err.message);
      }, 
      async () => {
        const url = await storageRef.getDownloadURL();
        await firebase.firestore().collection('books').add({ 
          title, 
          description, 
          category, 
          link: url, 
          secret_code: 'ibr2010071717.se',
          created: new Date()
        });
        
        alert(isKirill ? '✅ Китоб муваффақиятли қўшилди!' : '✅ Kitob muvaffaqiyatli qo‘shildi!');
        progressWrap.hidden = true;
        uploadForm.reset();
        uploadSection.hidden = true;
      }
    );
  } catch(err) {
    console.error('❌ Xatolik:', err);
    alert(isKirill ? '❌ Хатолик: ' + err.message : '❌ Xatolik: ' + err.message);
    progressWrap.hidden = true;
  }
});

// =================== DELETE ===================
async function deleteBook(bookId, fileURL) {
  if (!isAdmin) { 
    alert(isKirill ? '❌ Сизда ўчириш ҳуқуқи йўқ!' : '❌ Sizda o‘chirish huquqi yo‘q!'); 
    return; 
  }
  
  if (!confirm(isKirill ? 'Ҳақиқатан ҳам бу китобни ўчирмоқчимисиз?' : 'Haqiqatan ham bu kitobni o‘chirmoqchimisiz?')) return;
  
  try {
    await firebase.firestore().collection('books').doc(bookId).delete();
    const ref = firebase.storage().refFromURL(fileURL);
    await ref.delete();
    alert(isKirill ? '✅ Китоб муваффақиятли ўчирилди!' : '✅ Kitob muvaffaqiyatli o‘chirildi!');
  } catch(err) {
    console.error('❌ O‘chirish xatolik:', err);
    alert(isKirill ? '❌ Ўчиришда хатолик: ' + err.message : '❌ O‘chirishda xatolik: ' + err.message);
  }
}

// =================== FIRESTORE SYNC ===================
function loadBooks() {
  firebase.firestore().collection('books').onSnapshot(snap => {
    allBooks = snap.docs.map(d => ({ id: d.id, ...d.data() }));
    booksContainer.innerHTML = ""; // Asosiy sahifadagi kitoblarni doimiy bo'sh qoldirish
  }, err => console.error('❌ Firestore xatolik:', err));
}

// =================== REVEAL ON SCROLL ===================
const io = new IntersectionObserver((entries) => {
  for (const e of entries) { 
    if (e.isIntersecting) { 
      e.target.classList.add('show'); 
      io.unobserve(e.target); 
    } 
  }
}, { threshold: 0.1 });

function revealAll() {
  document.querySelectorAll('.reveal').forEach(el => io.observe(el));
}

// =================== INIT ===================
loadTheme();
runSplash();
loadBooks();
